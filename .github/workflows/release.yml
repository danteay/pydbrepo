name: Release

on:
  push:
    branches: [master]

env:
  GIT_USER_EMAIL: dante.aguilar41@gmail.com
  GIT_USER_NAME: danteay

jobs:
  # coverage:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Setup Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: 3.8

  #     - name: Install Poetry
  #       uses: abatilo/actions-poetry@v2.0.0

  #     - name: Cache dependencies
  #       uses: actions/cache@v2
  #       with:
  #         path: ~/.cache/pypoetry/virtualenvs
  #         key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}

  #     - name: Install dependencies
  #       run: poetry install

  #     - name: Run Tests
  #       run: make cover_xml

  #     - name: Upload coverage to Codecov
  #       uses: codecov/codecov-action@v1
  #       with:
  #         token: ${{ secrets.CODECOV_TOKEN }}
  #         fail_ci_if_error: false

  bump:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        token: '${{ secrets.ACCESS_TOKEN }}'
        fetch-depth: 0

    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install -U commitizen
    - name: Create Bump
      run: |
        git config --local user.email "$GIT_USER_EMAIL"
        git config --local user.name "$GIT_USER_NAME"
        cz bump --changelog --yes
    - name: Push changes
      uses: Woile/github-push-action@master
      with:
        github_token: ${{ secrets.ACCESS_TOKEN }}
        tags: "true"

  publish:
    needs:
      - bump
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          token: '${{ secrets.ACCESS_TOKEN }}'
          ref: 'master'
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2.0.0

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install

      - name: Publish
        run: poetry publish --build --username __token__ --password ${{ secrets.PYPI_TOKEN }}